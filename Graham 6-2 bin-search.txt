(defun bin-search(obj vec &key (key #'identity) (start 0) (end (length vec)))
  (let ((mid (ceiling (+ start end) 2)))
    (cond ((or (> start (1- end)) (null vec)
          (and(= start (1- end))(not(= obj (funcall key (aref vec start)))))) nil)
          ((= obj (funcall key (aref vec start))) (aref vec start))
          ((= obj (funcall key (aref vec mid))) (aref vec mid))
          ((< obj (funcall key (aref vec mid)))
           (bin-search obj vec :key key :start start :end mid))
          (t (bin-search obj vec :key key :start mid :end end)))))